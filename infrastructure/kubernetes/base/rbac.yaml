# RBAC Configuration for Decision Platform
apiVersion: v1
kind: ServiceAccount
metadata:
  name: decision-backend
  namespace: decision
  labels:
    app.kubernetes.io/name: decision-backend
    app.kubernetes.io/part-of: decision-platform
    app.kubernetes.io/component: backend
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT:role/decision-backend-role"
automountServiceAccountToken: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: decision-frontend
  namespace: decision
  labels:
    app.kubernetes.io/name: decision-frontend
    app.kubernetes.io/part-of: decision-platform
    app.kubernetes.io/component: frontend
automountServiceAccountToken: false
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: decision-ml-worker
  namespace: decision
  labels:
    app.kubernetes.io/name: decision-ml-worker
    app.kubernetes.io/part-of: decision-platform
    app.kubernetes.io/component: ml-worker
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT:role/decision-ml-worker-role"
automountServiceAccountToken: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: decision-db-backup
  namespace: decision
  labels:
    app.kubernetes.io/name: decision-db-backup
    app.kubernetes.io/part-of: decision-platform
    app.kubernetes.io/component: backup
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT:role/decision-db-backup-role"
automountServiceAccountToken: true
---
# ClusterRole for Backend Database Access
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: decision-backend-cluster-role
  labels:
    app.kubernetes.io/name: decision-backend
    app.kubernetes.io/part-of: decision-platform
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets", "endpoints", "services"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
---
# Role for Backend Operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: decision
  name: decision-backend-role
  labels:
    app.kubernetes.io/name: decision-backend
    app.kubernetes.io/part-of: decision-platform
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create"]
---
# Role for ML Worker Operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: decision
  name: decision-ml-worker-role
  labels:
    app.kubernetes.io/name: decision-ml-worker
    app.kubernetes.io/part-of: decision-platform
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "create", "delete"]
---
# ClusterRoleBinding for Backend
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: decision-backend-cluster-binding
  labels:
    app.kubernetes.io/name: decision-backend
    app.kubernetes.io/part-of: decision-platform
subjects:
- kind: ServiceAccount
  name: decision-backend
  namespace: decision
roleRef:
  kind: ClusterRole
  name: decision-backend-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
# RoleBinding for Backend
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: decision-backend-binding
  namespace: decision
  labels:
    app.kubernetes.io/name: decision-backend
    app.kubernetes.io/part-of: decision-platform
subjects:
- kind: ServiceAccount
  name: decision-backend
  namespace: decision
roleRef:
  kind: Role
  name: decision-backend-role
  apiGroup: rbac.authorization.k8s.io
---
# RoleBinding for ML Worker
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: decision-ml-worker-binding
  namespace: decision
  labels:
    app.kubernetes.io/name: decision-ml-worker
    app.kubernetes.io/part-of: decision-platform
subjects:
- kind: ServiceAccount
  name: decision-ml-worker
  namespace: decision
roleRef:
  kind: Role
  name: decision-ml-worker-role
  apiGroup: rbac.authorization.k8s.io
---
# Monitoring ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: decision-platform
---
# Monitoring ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: decision-platform
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
# Monitoring ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: decision-platform
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
