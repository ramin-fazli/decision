{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "decision.fullname" . }}-backend
  labels:
    {{- $component := "backend" }}
    {{- include "decision.componentLabels" (set . "component" $component) | nindent 4 }}
    {{- include "decision.monitoringLabels" . | nindent 4 }}
    {{- include "decision.istioLabels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "decision.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.backend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "decision.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
        {{- include "decision.monitoringLabels" . | nindent 8 }}
        {{- include "decision.istioLabels" . | nindent 8 }}
    spec:
      {{- include "decision.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "decision.serviceAccountName" . }}
      {{- include "decision.podSecurityContext" . | nindent 6 }}
      initContainers:
        - name: db-migration
          {{- include "decision.securityContext" . | nindent 10 }}
          image: {{ include "decision.image" (dict "repository" .Values.backend.image.repository "tag" .Values.backend.image.tag "Values" .Values) }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          command:
            - python
            - -m
            - alembic
            - upgrade
            - head
          env:
            {{- include "decision.commonEnv" . | nindent 12 }}
          {{- include "decision.resources" (dict "resources" (dict "limits" (dict "cpu" "200m" "memory" "256Mi") "requests" (dict "cpu" "100m" "memory" "128Mi"))) | nindent 10 }}
      containers:
        - name: backend
          {{- include "decision.securityContext" . | nindent 10 }}
          image: {{ include "decision.image" (dict "repository" .Values.backend.image.repository "tag" .Values.backend.image.tag "Values" .Values) }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.targetPort }}
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          {{- include "decision.healthChecks" .Values.backend | nindent 10 }}
          {{- include "decision.resources" .Values.backend | nindent 10 }}
          env:
            {{- include "decision.commonEnv" . | nindent 12 }}
            {{- range $key, $value := .Values.backend.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: PROMETHEUS_MULTIPROC_DIR
              value: "/tmp/prometheus"
          {{- include "decision.volumeMounts" .Values.backend | nindent 10 }}
            - name: prometheus-metrics
              mountPath: /tmp/prometheus
      {{- include "decision.volumes" .Values.backend | nindent 6 }}
        - name: prometheus-metrics
          emptyDir: {}
      {{- include "decision.nodeSelection" .Values.backend | nindent 6 }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
{{- end }}
